@page "/"
@page "/catalogo"

@inject IProductoServicio productoServicio
@inject ICategoriaServicio categoriaServicio
@inject Blazored.Toast.Services.IToastService toastService
@inject SweetAlertService Swal;

<div class="row justify-content-center mt-3 mb-4">
    <div class="col-sm-6 col-md-8 col-xl-9">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar producto..." @oninput="(async (e) => await ObtenerCatalogo(((ChangeEventArgs)e).Value.ToString()))">
            <button class="btn btn-outline-secondary" type="button" @onclick="(async () => await  ObtenerCatalogo())">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <div class="card">
            <div class="card-header text-white bg-dark">
                Categorias
            </div>
            <div class="card-body">
                @if (listaCategoria != null)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="categoria" id="Todos" value="Todos"
                               @onchange="(async (e) => await RadioSeleccion(((ChangeEventArgs)e).Value.ToString()))"
                               checked=@(categoriaSeleccionada.Equals("Todos"))
                        >
                        <label class="form-check-label" for="Todos">
                            Todos
                        </label>
                    </div>

                    @foreach (var itemC in listaCategoria)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="categoria" id="@itemC.IdCategoria" value="@itemC.Nombre"
                                   @onchange="(async (e) => await RadioSeleccion(((ChangeEventArgs)e).Value.ToString()))"
                                   checked=@(categoriaSeleccionada.Equals(itemC.Nombre))
                            >
                            <label class="form-check-label" for="@itemC.IdCategoria">
                                @itemC.Nombre
                            </label>
                        </div>
                    }

                }
                else
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-sm-9">
        <div class="row gx-4 row-cols-1 row-cols-md-3 row-cols-xl-4 justify-content-start">
            @if (listaProducto != null)
            {
                foreach (var item in listaProducto)
                {
                    <div class="col mb-5">
                        <div class="card h-100">
                            <!-- Sale badge-->
                            <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nuevo</div>
                            <!-- Product image-->
                            <img class="card-img-top border-dark border-1" src="@item.Imagen" style="width:100%;height:250px">
                            <!-- Product details-->
                            <div class="card-body p-4">
                                <div class="text-center">
                                    <!-- Product name-->
                                    <h5 class="fw-bolder">@item.Nombre</h5>
                                    <!-- Product price-->
                                    <span class="text-danger text-decoration-line-through">S/. @item.Precio</span>
                                    <span>S /.@item.PrecioOferta</span>
                                    <span>S /.@item.Precio</span>
                                </div>
                            </div>
                            <!-- Product actions-->
                            <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                                <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="/detalle/@item.IdProducto">Ver producto</a></div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
        </div>
    </div>
</div>


@code {
    private List<ProductoDTO>? listaProducto = null;
    private List<CategoriaDTO>? listaCategoria = null;
    private string categoriaSeleccionada = "Todos";
    private string buscar = "";

    private async Task ObtenerCatalogo(string Valor = "", string categoria = "Todos")
    {
        buscar = Valor;
        var response = await productoServicio.Catalogo(categoria, Valor);
        if (response.Exitoso)
        {
            listaProducto = (List<ProductoDTO>)response.Resultado!;
        }
        else
        {
            listaProducto = new List<ProductoDTO>();
        }
    }

    private async Task ObtenerCategoria(string Valor = "")
    {
        buscar = Valor;
        var response = await categoriaServicio.Lista(Valor);
        if (response.Exitoso)
        {
            listaCategoria = (List<CategoriaDTO>)response.Resultado!;
        }
        else
        {
            listaCategoria = new List<CategoriaDTO>();
        }
    }

    private async Task RadioSeleccion(string categoria)
    {
        categoriaSeleccionada = categoria;
        if (categoria == "Todos")
        {
            await ObtenerCatalogo(buscar);
        }
        else
        {
            await ObtenerCatalogo(buscar, categoriaSeleccionada);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCatalogo();
        await ObtenerCategoria();
    }
    
}
